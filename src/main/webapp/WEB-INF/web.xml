<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xmlns="http://xmlns.jcp.org/xml/ns/javaee" 
xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd" version="3.1"> 
  
   
  <display-name>ssm-crud</display-name>
  <welcome-file-list>
  	<!-- <welcome-file>/WEB-INF/views/login.jsp</welcome-file> -->
  	<welcome-file>index.jsp</welcome-file>
  	<welcome-file>/WEB-INF/views/register.jsp</welcome-file> 	     
    <welcome-file>default.jsp</welcome-file>
  </welcome-file-list>
 
  
  <!-- 1、启动spring的容器 -->
  <!-- needed for ContextLoaderListener -->
  <context-param>
  		<param-name>contextConfigLocation</param-name>
  		<!-- 在根目录存在springContext.xml文件，spring容器的配置文件，实现框架整合 -->
  		<param-value>classpath:applicationContext.xml</param-value>
  </context-param>
  
  <!-- Bootstraps the root web application context before servlet initialization -->
  <listener>
  		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  </listener>
  
  
  <!--  5、配置log4j 
  <context-param>  
      <param-name>log4jConfigLocation</param-name>   
      <param-value>WEB-INF/classes/contexts/log4j.properties</param-value>   
  </context-param>  
  <context-param>   
      <param-name>log4jRefreshInterval</param-name>   
      <param-value>60000</param-value>   
  </context-param>   
  需要添加spring-web.jar包  
  <listener>   
      <listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>   
  </listener>   -->

  
  <!-- 2、springmvc的前端控制器，拦截所有请求 -->
  <!-- The front controllor of this Spring Web application -->
  <servlet>
  		<servlet-name>dispatcherServlet</servlet-name>  		
  		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
  		<load-on-startup>1</load-on-startup>
  </servlet>
  		
  <!-- Map all requests to the DispatcherServlet for handl -->
  <servlet-mapping>
  		<servlet-name>dispatcherServlet</servlet-name>
  		<url-pattern>/</url-pattern>
  		<!-- <url-pattern>*.do</url-pattern> -->
  </servlet-mapping>		
  
  <!-- 3、字符编码过滤器，一定要放在所有过滤器之前 -->
  <filter>
  		<filter-name>CharacterEncodingFilter</filter-name>
  		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
  		<init-param>
  			<param-name>encoding</param-name>
  			<param-value>utf-8</param-value>
  		</init-param>
  		<init-param>
  			<param-name>forceRequestEncoding</param-name>
  			<param-value>true</param-value>
  		</init-param>
  		<init-param>
  			<param-name>forceResponseEncoding</param-name>
  			<param-value>true</param-value>
  		</init-param>
  </filter>
  <filter-mapping>
  		<filter-name>CharacterEncodingFilter</filter-name>
  		<url-pattern>/*</url-pattern>
  </filter-mapping>
 
  <!-- 4、使用Rest风格的URI，将页面普通的post请求转为指定的delete或者put请求 -->	
  <filter>
  		<filter-name>HiddenHttpMethodFilter</filter-name>
  		<filter-class>org.springframework.web.filter.HiddenHttpMethodFilter</filter-class>
  </filter>
  <filter-mapping>
  		<filter-name>HiddenHttpMethodFilter</filter-name>
  		<url-pattern>/*</url-pattern>
  </filter-mapping>
  <filter>
  		<filter-name>HttpPutFormContentFilter</filter-name>
  		<filter-class>org.springframework.web.filter.HttpPutFormContentFilter</filter-class>
  </filter>
  <filter-mapping>
  		<filter-name>HttpPutFormContentFilter</filter-name>
  		<url-pattern>/*</url-pattern>
  </filter-mapping>
</web-app>